{"ast":null,"code":"var _jsxFileName = \"/Users/ccr2k/Desktop/krsnafoodyarn/src/components/PaymentForm.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  name: {\n    verticalAlign: 'top',\n    display: 'none',\n    margin: 0,\n    border: 'none',\n    fontSize: \"16px\",\n    fontFamily: \"Helvetica Neue\",\n    padding: \"16px\",\n    color: \"#373F4A\",\n    backgroundColor: \"transparent\",\n    lineHeight: \"1.15em\",\n    placeholderColor: \"#000\",\n    _webkitFontSmoothing: \"antialiased\",\n    _mozOsxFontSmoothing: \"grayscale\"\n  },\n  leftCenter: {\n    float: 'left',\n    textAlign: 'center'\n  },\n  blockRight: {\n    display: 'block',\n    float: 'right'\n  },\n  center: {\n    textAlign: 'center'\n  }\n};\nexport default class PaymentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardBrand: \"\",\n      nonce: undefined\n    };\n    this.requestCardNonce = this.requestCardNonce.bind(this);\n  }\n\n  requestCardNonce() {\n    this.paymentForm.requestCardNonce();\n  }\n\n  componentDidMount() {\n    const config = {\n      applicationId: \"sq0idp-rARHLPiahkGtp6mMz2OeCA\",\n      locationId: \"GMT96A77XABR1\",\n      inputClass: \"sq-input\",\n      autoBuild: false,\n      inputStyles: [{\n        fontSize: \"16px\",\n        fontFamily: \"Helvetica Neue\",\n        padding: \"16px\",\n        color: \"#373F4A\",\n        backgroundColor: \"transparent\",\n        lineHeight: \"1.15em\",\n        placeholderColor: \"#000\",\n        _webkitFontSmoothing: \"antialiased\",\n        _mozOsxFontSmoothing: \"grayscale\"\n      }],\n      cardNumber: {\n        elementId: \"sq-card-number\",\n        placeholder: \"• • • •  • • • •  • • • •  • • • •\"\n      },\n      cvv: {\n        elementId: \"sq-cvv\",\n        placeholder: \"CVV\"\n      },\n      expirationDate: {\n        elementId: \"sq-expiration-date\",\n        placeholder: \"MM/YY\"\n      },\n      postalCode: {\n        elementId: \"sq-postal-code\",\n        placeholder: \"Zip\"\n      },\n      callbacks: {\n        methodsSupported: methods => {\n          return;\n        },\n        createPaymentRequest: () => {\n          return {\n            requestShippingAddress: false,\n            requestBillingInfo: true,\n            currencyCode: \"USD\",\n            countryCode: \"US\",\n            total: {\n              label: \"MERCHANT NAME\",\n              amount: \"100\",\n              pending: false\n            },\n            lineItems: [{\n              label: \"Subtotal\",\n              amount: \"100\",\n              pending: false\n            }]\n          };\n        },\n        cardNonceResponseReceived: (errors, nonce, cardData) => {\n          if (errors) {\n            // Log errors from nonce generation to the Javascript console\n            console.log(\"Encountered errors:\");\n            errors.forEach(function (error) {\n              console.log(\"  \" + error.message);\n            });\n            return;\n          }\n\n          this.setState({\n            nonce: nonce\n          });\n        },\n        unsupportedBrowserDetected: () => {},\n        inputEventReceived: inputEvent => {\n          switch (inputEvent.eventType) {\n            case \"focusClassAdded\":\n              break;\n\n            case \"focusClassRemoved\":\n              break;\n\n            case \"errorClassAdded\":\n              document.getElementById(\"error\").innerHTML = \"Please fix card information errors before continuing.\";\n              break;\n\n            case \"errorClassRemoved\":\n              document.getElementById(\"error\").style.display = \"none\";\n              break;\n\n            case \"cardBrandChanged\":\n              if (inputEvent.cardBrand !== \"unknown\") {\n                this.setState({\n                  cardBrand: inputEvent.cardBrand\n                });\n              } else {\n                this.setState({\n                  cardBrand: \"\"\n                });\n              }\n\n              break;\n\n            case \"postalCodeChanged\":\n              break;\n\n            default:\n              break;\n          }\n        },\n        paymentFormLoaded: function () {\n          document.getElementById('name').style.display = \"inline-flex\";\n        }\n      }\n    };\n    this.paymentForm = new this.props.paymentForm(config);\n    this.paymentForm.build();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"sq-ccbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: styles.leftCenter,\n              children: \"Enter Card Info Below \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: styles.blockRight,\n              children: this.state.cardBrand.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"cc-field-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"sq-card-number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              id: \"card-nonce\",\n              name: \"nonce\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"sq-expiration-date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"sq-cvv\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            style: styles.name,\n            type: \"text\",\n            placeholder: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"sq-postal-code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-credit-card\",\n          onClick: this.requestCardNonce,\n          children: \"Pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.center,\n        id: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ccr2k/Desktop/krsnafoodyarn/src/components/PaymentForm.js"],"names":["React","Component","styles","name","verticalAlign","display","margin","border","fontSize","fontFamily","padding","color","backgroundColor","lineHeight","placeholderColor","_webkitFontSmoothing","_mozOsxFontSmoothing","leftCenter","float","textAlign","blockRight","center","PaymentForm","constructor","props","state","cardBrand","nonce","undefined","requestCardNonce","bind","paymentForm","componentDidMount","config","applicationId","locationId","inputClass","autoBuild","inputStyles","cardNumber","elementId","placeholder","cvv","expirationDate","postalCode","callbacks","methodsSupported","methods","createPaymentRequest","requestShippingAddress","requestBillingInfo","currencyCode","countryCode","total","label","amount","pending","lineItems","cardNonceResponseReceived","errors","cardData","console","log","forEach","error","message","setState","unsupportedBrowserDetected","inputEventReceived","inputEvent","eventType","document","getElementById","innerHTML","style","paymentFormLoaded","build","render","toUpperCase"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nconst styles = {\n  name: {\n    verticalAlign: 'top',\n    display: 'none',\n    margin: 0,\n    border: 'none',\n    fontSize: \"16px\",\n    fontFamily: \"Helvetica Neue\",\n    padding: \"16px\",\n    color: \"#373F4A\",\n    backgroundColor: \"transparent\",\n    lineHeight: \"1.15em\",\n    placeholderColor: \"#000\",\n    _webkitFontSmoothing: \"antialiased\",\n    _mozOsxFontSmoothing: \"grayscale\",\n  },\n  leftCenter: {\n    float: 'left',\n    textAlign: 'center'\n  },\n  blockRight: {\n    display: 'block',\n    float: 'right'\n  },\n  center: {\n    textAlign: 'center'\n  }\n}\n\nexport default class PaymentForm extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      cardBrand: \"\",\n      nonce: undefined\n    }\n    this.requestCardNonce = this.requestCardNonce.bind(this);\n  }\n\n  requestCardNonce(){\n    this.paymentForm.requestCardNonce();\n  }\n\n  componentDidMount(){\n    const config = {\n      applicationId: \"sq0idp-rARHLPiahkGtp6mMz2OeCA\",\n      locationId: \"GMT96A77XABR1\",\n      inputClass: \"sq-input\",\n      autoBuild: false,\n      inputStyles: [\n        {\n          fontSize: \"16px\",\n          fontFamily: \"Helvetica Neue\",\n          padding: \"16px\",\n          color: \"#373F4A\",\n          backgroundColor: \"transparent\",\n          lineHeight: \"1.15em\",\n          placeholderColor: \"#000\",\n          _webkitFontSmoothing: \"antialiased\",\n          _mozOsxFontSmoothing: \"grayscale\"\n        }\n      ],\n      cardNumber: {\n        elementId: \"sq-card-number\",\n        placeholder: \"• • • •  • • • •  • • • •  • • • •\"\n      },\n      cvv: {\n        elementId: \"sq-cvv\",\n        placeholder: \"CVV\"\n      },\n      expirationDate: {\n        elementId: \"sq-expiration-date\",\n        placeholder: \"MM/YY\"\n      },\n      postalCode: {\n        elementId: \"sq-postal-code\",\n        placeholder: \"Zip\"\n      },\n      callbacks: {\n        methodsSupported: (methods) => {\n          return;\n        },\n        createPaymentRequest: () => {\n          return {\n            requestShippingAddress: false,\n            requestBillingInfo: true,\n            currencyCode: \"USD\",\n            countryCode: \"US\",\n            total: {\n              label: \"MERCHANT NAME\",\n              amount: \"100\",\n              pending: false\n            },\n            lineItems: [\n              {\n                label: \"Subtotal\",\n                amount: \"100\",\n                pending: false\n              }\n            ]\n          };\n        },\n        cardNonceResponseReceived: (errors, nonce, cardData) => {\n          if (errors) {\n            // Log errors from nonce generation to the Javascript console\n            console.log(\"Encountered errors:\");\n            errors.forEach(function(error) {\n              console.log(\"  \" + error.message);\n            });\n\n            return;\n          }\n          this.setState({\n            nonce: nonce\n          })\n        },\n        unsupportedBrowserDetected: () => {\n        },\n        inputEventReceived: (inputEvent) => {\n          switch (inputEvent.eventType) {\n            case \"focusClassAdded\":\n              break;\n            case \"focusClassRemoved\":\n              break;\n            case \"errorClassAdded\":\n              document.getElementById(\"error\").innerHTML =\n                \"Please fix card information errors before continuing.\";\n              break;\n            case \"errorClassRemoved\":\n              document.getElementById(\"error\").style.display = \"none\";\n              break;\n            case \"cardBrandChanged\":\n              if(inputEvent.cardBrand !== \"unknown\"){\n                this.setState({\n                  cardBrand: inputEvent.cardBrand\n                })\n              } else {\n                this.setState({\n                  cardBrand: \"\"\n                })\n              }\n              break;\n            case \"postalCodeChanged\":\n              break;\n            default:\n              break;\n          }\n        },\n        paymentFormLoaded: function() {\n          document.getElementById('name').style.display = \"inline-flex\";\n        }\n      }\n    };\n    this.paymentForm = new this.props.paymentForm(config);\n    this.paymentForm.build();\n  }\n\n  render(){\n    return (\n      <div className=\"container\">\n        <div id=\"form-container\">\n          \n\n          <div id=\"sq-ccbox\">\n            <p>\n              <span style={styles.leftCenter}>Enter Card Info Below </span>\n              <span style={styles.blockRight}>\n                {this.state.cardBrand.toUpperCase()}\n              </span>\n            </p>\n            <div id=\"cc-field-wrapper\">\n              <div id=\"sq-card-number\"></div>\n              <input type=\"hidden\" id=\"card-nonce\" name=\"nonce\" />\n              <div id=\"sq-expiration-date\"></div>\n              <div id=\"sq-cvv\"></div>\n            </div>\n            <input\n              id=\"name\"\n              style={styles.name}\n              type=\"text\"\n              placeholder=\"Name\"\n            />\n            <div id=\"sq-postal-code\"></div>\n          </div>\n          <button className=\"button-credit-card\"\n                  onClick={this.requestCardNonce}>Pay</button>\n        </div>\n        <p style={styles.center} id=\"error\"></p>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}